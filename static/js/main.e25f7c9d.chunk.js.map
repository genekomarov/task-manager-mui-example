{"version":3,"sources":["utils/arrayToStringArguments.ts","api/api.ts","redux/clientSideApiReducer.ts","exceptions/exceptions.ts","redux/authReducer.ts","redux/projectsReducer.ts","redux/usersReducer.ts","redux/tasksReducer.ts","redux/appReducer.ts","redux/store.ts","utils/universalCounter.ts","components/Menu/Projects/Projects.tsx","components/Menu/Users/Users.tsx","components/Menu/Menu.tsx","components/AppBarContent/AppBarContent.tsx","components/FilterData/CombinedFilter/CombinedFilter.tsx","components/FilterData/ByStatusSort/ByStatusSort.tsx","components/FilterData/ByUsersFilter/ByUsersFilter.tsx","components/FilterData/ByContentFilter/ByContentFilter.tsx","components/FilterData/Filter.tsx","components/FilterData/FilterWrapper.tsx","components/TasksList/TasksList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["arrayToStringArguments","argName","argArray","map","arg","toString","replace","instance","axios","create","withCredentials","baseURL","headers","authAPI","auth","email","password","get","then","response","data","usersAPI","getUsersByIds","setOfUserIds","length","getUserIdsByProjectIds","setOfProjectIds","addNewUser","console","error","changeUser","deleteUser","projectsAPI","getProjectsByIds","getProjectIdsByUserIds","addNewProject","changeProject","deleteProject","tasksAPI","getTasksByProjectOrUserIds","addNewTask","task","post","changeTask","taskId","title","isDone","patch","deleteTask","delete","initialState","clientSideData","users","items","deleted","authData","projectsToUsers","projects","tasks","clientSideApiReducer","state","action","type","tableName","itemId","item","filter","id","AuthorizationFailedException","message","this","nickname","isAuth","actions","login","dispatch","a","extraData","Cookies","set","alert","logout","remove","isFetching","selectedProjectId","getProjects","userIds","projectIds","p","projectId","projectsReducer","selectedUserId","getUsers","u","userId","setSelectedUserId","usersReducer","status","content","sort","countOfShownTasks","getTasks","setFilter","tasksReducer","isInitialized","appReducer","rootReducer","combineReducers","api","authReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_universalCounter","getCounter","counter","useStyles","makeStyles","theme","createStyles","root","display","flexDirection","progress","alignSelf","margin","spacing","nested","paddingLeft","mapDispatchToProps","setFetching","setProjects","setSelectedProjectId","connect","myId","props","useEffect","classes","React","useState","open","setOpen","className","ListItem","button","onClick","ListItemIcon","ListItemText","primary","primaryTypographyProps","variant","CircularProgress","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","key","projectName","projectsIsFetching","t","author","width","maxWidth","backgroundColor","palette","background","paper","verticalSpacing","alignItems","padding","justifyContent","Menu","aria-labelledby","subheader","ListSubheader","grow","flexGrow","breakpoints","up","sectionDesktop","sectionMobile","typography__authorizedUserNickname","marginRight","myNickname","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","renderMobileMenu","IconButton","aria-label","aria-controls","aria-haspopup","color","Typography","noWrap","Helmet","edge","Button","formControl","minWidth","selectEmpty","marginTop","CombinedFilter","age","setAge","FormControl","Select","value","onChange","target","displayEmpty","inputProps","startAdornment","InputAdornment","position","Divider","ByStatusSort","ByUsersFilter","Autocomplete","disableClearable","multiple","options","getOptionLabel","option","defaultValue","filterSelectedOptions","renderInput","params","TextField","label","placeholder","ByContentFilter","style","noValidate","autoComplete","fullWidth","Filter","FilterRow","children","ListItemSecondaryAction","FilterWrapper","setCountOfShownTasks","usersIsFetching","log","checked","setChecked","userNickNameByUserId","userNicknams","filteredTasks","useMemo","statusFilter","usersFilter","contentFilter","match","RegExp","Container","size","labelId","role","undefined","currentIndex","indexOf","newChecked","push","splice","Checkbox","tabIndex","disableRipple","secondary","drawer","flexShrink","appBar","marginLeft","menuButton","toolbar","mixins","drawerPaper","backdrop","zIndex","appInitializing","Api","thunk","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","Backdrop","CssBaseline","AppBar","Toolbar","Hidden","smUp","implementation","Drawer","anchor","direction","ModalProps","xsDown","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e25f7c9d.chunk.js","sourcesContent":["const arrayToStringArguments = (argName: string, argArray: Array<number | string> | null) =>\r\n    argArray\r\n        ? argArray.map((arg) => `${argName}=${arg}&`).toString().replace(/,/g,'')\r\n        : \"\"\r\n\r\nexport default arrayToStringArguments","import axios from 'axios'\r\nimport {\r\n    AuthDataType,\r\n    ProjectToUserIdsMatch,\r\n    ProjectType,\r\n    TaskType, UserType\r\n} from \"../types/types\"\r\nimport arrayToStringArguments from \"../utils/arrayToStringArguments\"\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://my-json-server.typicode.com/genekomarov/task-manager_mui',\r\n    headers: {}\r\n})\r\n\r\nexport const authAPI = {\r\n    auth: (email: string, password: string) => {\r\n        return instance.get<Array<AuthDataType>>(`/authData?email=${email}&password=${password}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsersByIds: (setOfUserIds: Array<number>) =>\r\n        setOfUserIds.length\r\n            ? instance.get<Array<UserType>>(`/users?${arrayToStringArguments(\"id\", setOfUserIds)}`)\r\n                .then(response => response.data)\r\n            : [],\r\n\r\n    getUserIdsByProjectIds: (setOfProjectIds: Array<number>) =>\r\n        setOfProjectIds.length\r\n            ? instance.get<Array<ProjectToUserIdsMatch>>(\r\n                `/projects-to-users?${arrayToStringArguments(\"projectId\", setOfProjectIds)}`)\r\n                .then(response => response.data)\r\n            : [],\r\n\r\n\r\n    addNewUser: () => console.error(\"method 'addNewUser' is not implemented\"),\r\n    changeUser: () => console.error(\"method 'changeUser' is not implemented\"),\r\n    deleteUser: () => console.error(\"method 'deleteUser' is not implemented\")\r\n}\r\n\r\nexport const projectsAPI = {\r\n    getProjectsByIds: (setOfProjectIds: Array<number>) =>\r\n        setOfProjectIds.length\r\n            ? instance.get<Array<ProjectType>>(`/projects?${arrayToStringArguments(\"id\", setOfProjectIds)}`)\r\n                .then(response => response.data)\r\n            : [],\r\n\r\n    getProjectIdsByUserIds: (setOfUserIds: Array<number>) =>\r\n        setOfUserIds.length\r\n            ? instance.get<Array<ProjectToUserIdsMatch>>(\r\n                `/projects-to-users?${arrayToStringArguments(\"userId\", setOfUserIds)}`)\r\n                .then(response => response.data)\r\n            : [],\r\n\r\n\r\n    addNewProject: () => console.error(\"method 'addNewProject' is not implemented\"),\r\n    changeProject: () => console.error(\"method 'changeProject' is not implemented\"),\r\n    deleteProject: () => console.error(\"method 'deleteProject' is not implemented\")\r\n}\r\n\r\nexport const tasksAPI = {\r\n    getTasksByProjectOrUserIds: (setOfProjectIds: Array<number> | null, setOfUserIds: Array<number> | null) =>\r\n        setOfProjectIds || setOfUserIds\r\n            ? instance.get<Array<TaskType>>(\r\n                `/tasks?${arrayToStringArguments(\"project\", setOfProjectIds)}${arrayToStringArguments(\"author\", setOfUserIds)}`)\r\n                .then(response => response.data)\r\n            : [],\r\n\r\n    addNewTask: (task: TaskType) =>\r\n        instance.post<TaskType>(`/tasks`, task)\r\n            .then(response => response.data),\r\n\r\n    changeTask: (taskId: number, title: string, isDone: boolean) =>\r\n        instance.patch<TaskType>(`/tasks/${taskId}`, {title, isDone})\r\n            .then(response => response.data),\r\n\r\n    deleteTask: (taskId: number) =>\r\n        instance.delete<TaskType>(`/tasks/${taskId}`)\r\n            .then(response => response.data),\r\n}\r\n\r\n","import {ThunkAction} from \"redux-thunk\"\r\nimport {AuthDataType, ProjectToUserIdsMatch, ProjectType, TaskType, UserType} from \"../types/types\"\r\nimport {ActionsTypes, AppStateType} from \"./store\"\r\n\r\nlet initialState = {\r\n    clientSideData: {\r\n        users: {\r\n            items: [] as Array<UserType>, //new or changed items\r\n            deleted: [] as Array<number> //ids of deleted items\r\n        },\r\n        authData: {\r\n            items: [] as Array<UserType>, //new or changed items\r\n            deleted: [] as Array<number> //ids of deleted items\r\n        },\r\n        projectsToUsers: {\r\n            items: [] as Array<ProjectToUserIdsMatch>, //new or changed items\r\n            deleted: [] as Array<number> //ids of deleted items\r\n        },\r\n        projects: {\r\n            items: [] as Array<ProjectType>, //new or changed items\r\n            deleted: [] as Array<number> //ids of deleted items\r\n        },\r\n        tasks: {\r\n            items: [] as Array<TaskType>, //new or changed items\r\n            deleted: [] as Array<number> //ids of deleted items\r\n        }\r\n    }\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\ntype DataType = typeof initialState.clientSideData\r\ntype TableNamesTypes = keyof DataType\r\ntype ItemType = {id: number, [key: string]: any}\r\n\r\nconst clientSideApiReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"ADD_ID_TO_DELETED\":\r\n            return {\r\n                ...state,\r\n                clientSideData: {\r\n                    ...state.clientSideData,\r\n                    [action.tableName]: {\r\n                        ...state.clientSideData[action.tableName],\r\n                        deleted: [\r\n                            ...state.clientSideData[action.tableName].deleted,\r\n                            action.itemId\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n            case \"ADD_NEW_ITEM\":\r\n                return {\r\n                    ...state,\r\n                    clientSideData: {\r\n                        ...state.clientSideData,\r\n                        [action.tableName]: {\r\n                            ...state.clientSideData[action.tableName],\r\n                            items: [\r\n                                ...state.clientSideData[action.tableName].items,\r\n                                action.item\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n                case \"DELETE_ITEM\":\r\n                    return {\r\n                        ...state,\r\n                        clientSideData: {\r\n                            ...state.clientSideData,\r\n                            [action.tableName]: {\r\n                                ...state.clientSideData[action.tableName],\r\n                                items: [...state.clientSideData[action.tableName].items].filter(\r\n                                    (item: ItemType) => item.id !== action.itemId\r\n                                )\r\n                            }\r\n                        }\r\n                    }\r\n        default: return state\r\n    }\r\n};\r\n\r\n\r\ntype ActionsType = ActionsTypes<typeof actions>\r\nexport const actions = {\r\n    addIdToDeleted: (tableName: TableNamesTypes, itemId:number) => ({type: 'ADD_ID_TO_DELETED', tableName, itemId} as const),\r\n    addNewItem: (tableName: TableNamesTypes, item: ItemType) => ({type: 'ADD_NEW_ITEM', tableName, item} as const),\r\n    deleteItem: (tableName: TableNamesTypes, itemId:number) => ({type: 'DELETE_ITEM', tableName, itemId} as const)\r\n}\r\n\r\n\r\n/*type ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number): ThunkType => async (dispatch) => {\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(actions.setUsers(data.items));\r\n};*/\r\n\r\n\r\n\r\nexport default clientSideApiReducer","export class AuthorizationFailedException {\r\n    message: string;\r\n    constructor () {\r\n        this.message = `Авторизация не удалась`\r\n    }\r\n}","import {ThunkAction} from \"redux-thunk\"\r\nimport {ActionsTypes, AppStateType} from \"./store\"\r\nimport {authAPI, usersAPI} from \"../api/api\"\r\nimport {AuthorizationFailedException} from \"../exceptions/exceptions\"\r\nimport Cookies from 'js-cookie'\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    nickname: null as string | null,\r\n    isAuth: false\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst clientSideApiReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"auth/SET_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                id: action.id,\r\n                email: action.email,\r\n                nickname: action.nickname,\r\n                isAuth: action.isAuth\r\n            }\r\n        default: return state\r\n    }\r\n};\r\n\r\ntype ActionsType = ActionsTypes<typeof actions>\r\nexport const actions = {\r\n    setUserData: (\r\n        id: number | null,\r\n        email: string | null,\r\n        nickname: string | null,\r\n        isAuth: boolean\r\n    ) => ({type: 'auth/SET_USER_DATA', id, email, nickname, isAuth} as const),\r\n}\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\nexport const login = (email: string, password: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        let authData = await authAPI.auth(email, password)\r\n        if (authData.length === 0) throw new AuthorizationFailedException()\r\n        let extraData = await usersAPI.getUsersByIds([authData[0].id])\r\n        if (authData.length === 0) throw new AuthorizationFailedException()\r\n        dispatch(actions.setUserData(authData[0].id, authData[0].email, extraData[0].nickname, true))\r\n        Cookies.set('email',  email)\r\n        Cookies.set('password', password)\r\n    }\r\n    catch (e) {\r\n        alert(e.message)\r\n    }\r\n}\r\n\r\nexport const fakeLogin = (): ThunkType => async (dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            setTimeout(() => {\r\n                dispatch(actions.setUserData(0, 'testuser@email.com', 'testuser', true))\r\n                resolve()\r\n            } ,2000)\r\n        }\r\n        catch (e) {\r\n            alert(e.message)\r\n            reject()\r\n        }\r\n    })\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    Cookies.remove('email')\r\n    Cookies.remove('password')\r\n    dispatch(actions.setUserData(null, null, null, false))\r\n}\r\n\r\nexport default clientSideApiReducer","import {ThunkAction} from \"redux-thunk\"\r\nimport {ActionsTypes, AppStateType} from \"./store\"\r\nimport {authAPI, projectsAPI, usersAPI} from \"../api/api\"\r\nimport {ProjectToUserIdsMatch, ProjectType} from \"../types/types\"\r\n\r\nlet initialState = {\r\n    projects: [] as Array<ProjectType>,\r\n    isFetching: false,\r\n    selectedProjectId: null as number | null\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nconst projectsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'projects/SET_PROJECTS':\r\n            return {\r\n                ...state,\r\n                projects: action.projects,\r\n                selectedProjectId: action.selectedProjectId\r\n            }\r\n        case \"projects/SET_FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"projects/SET_SELECTED_PROJECT_ID\":\r\n            return {\r\n                ...state,\r\n                selectedProjectId: action.selectedProjectId\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = ActionsTypes<typeof actions>\r\nexport const actions = {\r\n    setProjects: (projects: Array<ProjectType>) => ({\r\n        type: 'projects/SET_PROJECTS',\r\n        projects,\r\n        selectedProjectId: projects.length>0 ? projects[0].id : null\r\n    } as const),\r\n    setFetching: (isFetching: boolean) => ({type: 'projects/SET_FETCHING', isFetching} as const),\r\n    setSelectedProjectId: (selectedProjectId: number) => ({type: 'projects/SET_SELECTED_PROJECT_ID', selectedProjectId} as const),\r\n}\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\nexport const getProjects = (userIds: Array<number>): ThunkType => async (dispatch) => {\r\n    try {\r\n        let projectIds: Array<ProjectToUserIdsMatch> = await projectsAPI.getProjectIdsByUserIds(userIds)\r\n        let projects: Array<ProjectType> = await projectsAPI.getProjectsByIds(projectIds.map((p) => p.projectId))\r\n        dispatch(actions.setProjects(projects))\r\n        dispatch(actions.setFetching(false))\r\n    }\r\n    catch (e) {\r\n        alert(e.message)\r\n    }\r\n}\r\n\r\nexport const setProjects = (projects: Array<ProjectType>): ThunkType => async (dispatch) => {\r\n    dispatch(actions.setProjects(projects))\r\n}\r\n\r\nexport const setFetching = (isFetching: boolean): ThunkType => async (dispatch) => {\r\n    dispatch(actions.setFetching(isFetching))\r\n}\r\n\r\nexport const setSelectedProjectId = (selectedProjectId: number): ThunkType => async (dispatch) => {\r\n    dispatch(actions.setSelectedProjectId(selectedProjectId))\r\n}\r\n\r\nexport default projectsReducer","import {ThunkAction} from \"redux-thunk\"\r\nimport {ActionsTypes, AppStateType} from \"./store\"\r\nimport {authAPI, projectsAPI, usersAPI} from \"../api/api\"\r\nimport {ProjectToUserIdsMatch, ProjectType, UserType} from \"../types/types\"\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    isFetching: false,\r\n    selectedUserId: null as number | null\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"users/SET_USERS\":\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case \"users/SET_FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"users/SET_SELECTED_USER_ID\":\r\n            return {\r\n                ...state,\r\n                selectedUserId: action.selectedUserId\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = ActionsTypes<typeof actions>\r\nexport const actions = {\r\n    setUsers: (users: Array<UserType>) => ({type: 'users/SET_USERS', users} as const),\r\n    setFetching: (isFetching: boolean) => ({type: 'users/SET_FETCHING', isFetching} as const),\r\n    setSelectedUserId: (selectedUserId: number | null) => ({type: 'users/SET_SELECTED_USER_ID', selectedUserId} as const)\r\n}\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\nexport const getUsers = (projectIds: Array<number>): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(actions.setFetching(true))\r\n        let userIds: Array<ProjectToUserIdsMatch> = await usersAPI.getUserIdsByProjectIds(projectIds)\r\n        let users: Array<UserType> = await usersAPI.getUsersByIds(userIds.map((u) => u.userId))\r\n        dispatch(actions.setUsers(users))\r\n        dispatch(actions.setFetching(false))\r\n    } catch (e) {\r\n        alert(e.message)\r\n    }\r\n\r\n}\r\n\r\nexport const setFetching = (isFetching: boolean): ThunkType => async (dispatch) => {\r\n    dispatch(actions.setFetching(isFetching))\r\n}\r\n\r\nexport const setSelectedUserId = (selectedUserId: number | null): ThunkType => async (dispatch) => {\r\n    dispatch(actions.setSelectedUserId(selectedUserId))\r\n}\r\n\r\nexport default usersReducer","import {ThunkAction} from \"redux-thunk\"\r\nimport {ActionsTypes, AppStateType} from \"./store\"\r\nimport {authAPI, projectsAPI, tasksAPI, usersAPI} from \"../api/api\"\r\nimport {ProjectToUserIdsMatch, ProjectType, TaskFilterType, TaskType, UserType} from \"../types/types\"\r\n\r\nlet initialState = {\r\n    tasks: [] as Array<TaskType>,\r\n    isFetching: false,\r\n    filter: {\r\n        userIds: [] as Array<number>,\r\n        status: null as boolean | null,\r\n        content: \"\",\r\n    } as TaskFilterType,\r\n    sort: {},\r\n    countOfShownTasks: 0\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nconst tasksReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"tasks/SET_TASKS\":\r\n            return {\r\n                ...state,\r\n                tasks: action.tasks\r\n            }\r\n        case \"tasks/SET_FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"tasks/SET_FILTER\":\r\n            return {\r\n                ...state,\r\n                filter: action.filter\r\n            }\r\n        case \"tasks/SET_COUNT_OF_SHOWN_TASKS\":\r\n            return {\r\n                ...state,\r\n                countOfShownTasks: action.countOfShownTasks\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\ntype ActionsType = ActionsTypes<typeof actions>\r\nexport const actions = {\r\n    setTasks: (tasks: Array<TaskType>) => ({type: 'tasks/SET_TASKS', tasks} as const),\r\n    setFetching: (isFetching: boolean) => ({type: 'tasks/SET_FETCHING', isFetching} as const),\r\n    setFilter: (filter: TaskFilterType) => ({type: 'tasks/SET_FILTER', filter} as const),\r\n    setCountOfShownTasks: (countOfShownTasks: number) => ({\r\n        type: 'tasks/SET_COUNT_OF_SHOWN_TASKS',\r\n        countOfShownTasks\r\n    } as const)\r\n}\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\nexport const getTasks = (\r\n    projectIds: Array<number> | null,\r\n    userIds: Array<number> | null\r\n): ThunkType => async (dispatch) => {\r\n    try {\r\n        let tasks = await tasksAPI.getTasksByProjectOrUserIds(projectIds, userIds)\r\n        dispatch(actions.setTasks(tasks))\r\n        dispatch(actions.setFilter({userIds: [], status: null, content: \"\"}))\r\n        dispatch(actions.setFetching(false))\r\n    } catch (e) {\r\n        alert(e.message)\r\n    }\r\n}\r\n\r\nexport const setFetching = (isFetching: boolean): ThunkType => async (dispatch) => {\r\n    dispatch(actions.setFetching(isFetching))\r\n}\r\n\r\nexport const setFilter = (filter: TaskFilterType): ThunkType => async (dispatch) => {\r\n    dispatch(actions.setFilter(filter))\r\n}\r\n\r\nexport const setCountOfShownTasks = (countOfShownTasks: number): ThunkType => async (dispatch) => {\r\n    dispatch(actions.setCountOfShownTasks(countOfShownTasks))\r\n}\r\n\r\nexport default tasksReducer","import {ThunkAction} from \"redux-thunk\"\r\nimport {ActionsTypes, AppStateType} from \"./store\"\r\nimport {authAPI, usersAPI} from \"../api/api\"\r\nimport {AuthorizationFailedException} from \"../exceptions/exceptions\"\r\nimport {fakeLogin, login} from \"./authReducer\"\r\nimport Cookies from 'js-cookie'\r\n\r\nlet initialState = {\r\n    isInitialized: false\r\n};\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"app/SET_INITIALIZED\":\r\n            return {\r\n                ...state,\r\n                isInitialized: action.isInitialized\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\ntype ActionsType = ActionsTypes<typeof actions>\r\nexport const actions = {\r\n    setInitialized: (isInitialized: boolean) => ({type: 'app/SET_INITIALIZED', isInitialized} as const)\r\n}\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\nexport const appInitializing = (): ThunkType => async (dispatch) => {\r\n    try {\r\n        /*await dispatch(fakeLogin())*/\r\n        let email = Cookies.get('email')\r\n        let password = Cookies.get('password')\r\n        if (email && password)\r\n            await dispatch(login(email, password))\r\n        else {\r\n            alert('Ранее вы небыли авторизованы. Авторизация...')\r\n            await dispatch(login('testuser@email.com', 'testuser_pass'))\r\n        }\r\n\r\n        dispatch(actions.setInitialized(true))\r\n    } catch (e) {\r\n        alert(e.message)\r\n    }\r\n}\r\n\r\nexport default appReducer","import {combineReducers, createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport clientSideApiReducer from \"./clientSideApiReducer\"\r\nimport authReducer from \"./authReducer\"\r\nimport projectsReducer from \"./projectsReducer\"\r\nimport usersReducer from \"./usersReducer\"\r\nimport tasksReducer from \"./tasksReducer\"\r\nimport appReducer from \"./appReducer\"\r\n\r\nlet rootReducer = combineReducers({\r\n    api: clientSideApiReducer,\r\n    auth: authReducer,\r\n    projects: projectsReducer,\r\n    users: usersReducer,\r\n    tasks: tasksReducer,\r\n    app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\ntype UnionTypeFromObj<T> = T extends {[key: string]: infer R} ? R : never\r\nexport type ActionsTypes<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<UnionTypeFromObj<T>>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n/*let store = createStore(rootReducer, applyMiddleware(thunkMiddleware));*/\r\n\r\nexport default store","/**\r\n * Счетчик сдалан для работы с fake api.\r\n * Используется в качестве уникального идентификатора\r\n * при добавлении записи в любую из таблиц.\r\n * При вызове увеличивается на 1\r\n *\r\n * @param {number} counter - может быть использовано для сброса счетчика в любое значение. необязательный параметр\r\n * @return {number} newCounter - текущее значение счетчика.\r\n * */\r\nlet _universalCounter = 1000\r\nexport const getCounter = (counter: number = _universalCounter ): number => {\r\n    if (counter !== _universalCounter) _universalCounter = counter\r\n    return _universalCounter++\r\n}","import React, {useEffect} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport ListMui from '@material-ui/core/List';\r\nimport ListItemMui from '@material-ui/core/ListItem';\r\nimport ListItemIconMui from '@material-ui/core/ListItemIcon';\r\nimport ListItemTextMui from '@material-ui/core/ListItemText';\r\nimport CollapseMui from '@material-ui/core/Collapse';\r\nimport ExpandLessMui from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreMui from '@material-ui/icons/ExpandMore';\r\nimport AccountTreeIconMui from '@material-ui/icons/AccountTree';\r\nimport FolderIconMui from '@material-ui/icons/Folder';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {AppStateType} from \"../../../redux/store\"\r\nimport {connect} from \"react-redux\"\r\nimport {getProjects, setFetching, setProjects, setSelectedProjectId} from \"../../../redux/projectsReducer\"\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport {ProjectType, TaskFilterType} from \"../../../types/types\"\r\nimport {setSelectedUserId} from \"../../../redux/usersReducer\"\r\nimport {actions, setFilter} from \"../../../redux/tasksReducer\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n        },\r\n        progress: {\r\n            alignSelf: 'center',\r\n            margin: theme.spacing(2),\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing(4),\r\n        },\r\n    }),\r\n)\r\n\r\nconst Projects: React.FC<MapStatePropsType & MapDispatchProps> = (props) => {\r\n\r\n    /**Активируем каскад вертушек\r\n     * при начале инициализации*/\r\n    /*useEffect(() => {\r\n        props.initializationInProgress && props.setFetching(true)\r\n    }, [props.initializationInProgress, props.isAuth])*/\r\n\r\n    /**Получаем пользователей\r\n     * при изменении авторизованного ID*/\r\n    useEffect(() => {\r\n        props.myId!==null\r\n            ? props.getProjects([props.myId])\r\n            : props.setProjects([])\r\n    },[props.myId])\r\n\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(true)\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    const handleItemClick = (selectedProjectId: number) => {\r\n        props.setSelectedProjectId(selectedProjectId)\r\n        props.setFilter({userIds: [], status: null, content: \"\"})\r\n        props.setSelectedUserId(null)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ListItemMui button onClick={handleClick}>\r\n                <ListItemIconMui>\r\n                    <AccountTreeIconMui/>\r\n                </ListItemIconMui>\r\n                <ListItemTextMui\r\n                    primary=\"Проекты\"\r\n                    primaryTypographyProps={{variant: \"body1\"}}/>\r\n                {open ? <ExpandLessMui/> : <ExpandMoreMui/>}\r\n            </ListItemMui>\r\n            {props.isFetching && props.isAuth\r\n                ? <CircularProgress className={classes.progress}/>\r\n                : <CollapseMui in={open} timeout=\"auto\" unmountOnExit>\r\n                    {props.isAuth  && props.projects.map((item) => {\r\n                        return (\r\n                            <ListMui component=\"div\" disablePadding key={item.id}>\r\n                                <ListItemMui button className={classes.nested} onClick={() => handleItemClick(item.id)}>\r\n                                    <ListItemIconMui>\r\n                                        {\r\n                                            item.id === props.selectedProjectId\r\n                                                ? <FolderOpenIcon/>\r\n                                                : <FolderIconMui/>\r\n                                        }\r\n                                    </ListItemIconMui>\r\n                                    <ListItemTextMui primary={item.projectName}/>\r\n                                </ListItemMui>\r\n                            </ListMui>\r\n                        )\r\n                    })}\r\n                </CollapseMui>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isFetching: state.projects.isFetching,\r\n        isAuth: state.auth.isAuth,\r\n        projects: state.projects.projects,\r\n        myId: state.auth.id,\r\n        selectedProjectId: state.projects.selectedProjectId,\r\n        /*initializationInProgress: state.app.initializationInProgress,*/\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype MapDispatchProps = {\r\n    getProjects: (userIds: Array<number>) => void\r\n    setFetching: (isFetching: boolean) => void\r\n    setProjects: (projects: Array<ProjectType>) => void\r\n    setSelectedProjectId: (selectedProjectId: number) => void\r\n    setSelectedUserId: (selectedUserId: number | null) => void\r\n    setFilter: (filter: TaskFilterType) => void\r\n}\r\nconst mapDispatchToProps = {\r\n    getProjects,\r\n    setFetching,\r\n    setProjects,\r\n    setSelectedProjectId,\r\n    setSelectedUserId,\r\n    setFilter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects)","import React, {useEffect} from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport ListMui from '@material-ui/core/List';\r\nimport ListItemMui from '@material-ui/core/ListItem';\r\nimport ListItemIconMui from '@material-ui/core/ListItemIcon';\r\nimport ListItemTextMui from '@material-ui/core/ListItemText';\r\nimport CollapseMui from '@material-ui/core/Collapse';\r\nimport ExpandLessMui from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreMui from '@material-ui/icons/ExpandMore';\r\nimport PeopleIconMui from '@material-ui/icons/People';\r\nimport AccountCircleIconMui from '@material-ui/icons/AccountCircle';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\"\r\nimport {AppStateType} from \"../../../redux/store\"\r\nimport {connect} from \"react-redux\"\r\nimport {getUsers, setFetching, setSelectedUserId} from \"../../../redux/usersReducer\"\r\nimport FolderOpenIcon from \"@material-ui/core/SvgIcon/SvgIcon\"\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport {TaskFilterType} from \"../../../types/types\"\r\nimport {setFilter} from \"../../../redux/tasksReducer\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n        },\r\n        progress: {\r\n            alignSelf: 'center',\r\n            margin: theme.spacing(2),\r\n        },\r\n        nested: {\r\n            paddingLeft: theme.spacing(4),\r\n        },\r\n    }),\r\n)\r\n\r\nconst Users: React.FC<MapStatePropsType & MapDispatchProps> = (props) => {\r\n    /**Активируем каскад вертушек\r\n     * при начале инициализации*/\r\n    useEffect(() => {\r\n        props.projectsIsFetching && props.setFetching(true)\r\n    }, [props.projectsIsFetching])\r\n\r\n    useEffect(() => {\r\n        props.selectedProjectId!==null && props.getUsers([props.selectedProjectId])\r\n    },[props.selectedProjectId])\r\n\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(true)\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    const handleItemClick = (selectedUserId: number) => {\r\n        props.setSelectedUserId(selectedUserId)\r\n        props.setFilter({userIds: [selectedUserId], status: null, content: ''})\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ListItemMui button onClick={handleClick}>\r\n                <ListItemIconMui>\r\n                    <PeopleIconMui />\r\n                </ListItemIconMui>\r\n                <ListItemTextMui\r\n                    primary=\"Команда\"\r\n                    primaryTypographyProps={{variant: \"body1\"}}/>\r\n                {open ? <ExpandLessMui /> : <ExpandMoreMui />}\r\n            </ListItemMui>\r\n            {props.isFetching && props.isAuth\r\n                ? <CircularProgress className={classes.progress}/>\r\n                : <CollapseMui in={open} timeout=\"auto\" unmountOnExit>\r\n                    {props.isAuth && props.users.map((item) => {\r\n                        return (\r\n                            <ListMui component=\"div\" disablePadding key={item.id}>\r\n                                <ListItemMui button className={classes.nested} onClick={() => handleItemClick(item.id)}>\r\n                                    <ListItemIconMui>\r\n                                        {\r\n                                            item.id === props.selectedUserId\r\n                                                ? <PermIdentityIcon/>\r\n                                                : <PersonIcon/>\r\n                                        }\r\n                                    </ListItemIconMui>\r\n                                    <ListItemTextMui primary={\r\n                                        `${item.nickname} (${props.tasks.filter(t => t.author === item.id).length})`\r\n                                    }/>\r\n                                </ListItemMui>\r\n                            </ListMui>\r\n                        )\r\n                    })}\r\n                </CollapseMui>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isFetching: state.users.isFetching,\r\n        isAuth: state.auth.isAuth,\r\n        projectsIsFetching: state.projects.isFetching,\r\n        selectedProjectId: state.projects.selectedProjectId,\r\n        users: state.users.users,\r\n        selectedUserId: state.users.selectedUserId,\r\n        tasks: state.tasks.tasks\r\n    }\r\n}\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype MapDispatchProps = {\r\n    setFetching: (isFetching: boolean) => void,\r\n    getUsers: (projectIds: Array<number>) => void,\r\n    setSelectedUserId: (selectedUserId: number) => void,\r\n    setFilter: (filter: TaskFilterType) => void\r\n}\r\nconst mapDispatchToProps = {\r\n    setFetching,\r\n    getUsers,\r\n    setSelectedUserId,\r\n    setFilter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)\r\n","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport ListSubheaderMui from '@material-ui/core/ListSubheader'\r\nimport ListMui from '@material-ui/core/List'\r\nimport DividerMui from \"@material-ui/core/Divider/Divider\"\r\nimport Projects from \"./Projects/Projects\"\r\nimport Team from \"./Users/Users\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        /** Для отступа между блоками в меню*/\r\n        verticalSpacing: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: theme.spacing(2, 1),\r\n            justifyContent: 'flex-end',\r\n        },\r\n    }),\r\n)\r\n\r\nconst Menu: React.FC<any> = () => {    \r\n    \r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <ListMui\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={\r\n                <ListSubheaderMui component=\"div\" id=\"nested-list-subheader\">\r\n                    Меню\r\n                </ListSubheaderMui>\r\n            }\r\n            className={classes.root}\r\n        >\r\n            <DividerMui />\r\n            <Projects/>\r\n            <div className={classes.verticalSpacing} />\r\n            <Team/>\r\n            <DividerMui />\r\n        </ListMui>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles'\r\nimport IconButtonMui from '@material-ui/core/IconButton'\r\nimport TypographyMui from '@material-ui/core/Typography'\r\nimport MenuItemMui from '@material-ui/core/MenuItem'\r\nimport MenuMui from '@material-ui/core/Menu'\r\nimport AccountCircleIconMui from '@material-ui/icons/AccountCircle'\r\nimport MoreIconMui from '@material-ui/icons/MoreVert'\r\nimport {AppStateType} from \"../../redux/store\"\r\nimport {appInitializing} from \"../../redux/appReducer\"\r\nimport {connect} from \"react-redux\"\r\nimport {Helmet} from \"react-helmet\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport {logout} from \"../../redux/authReducer\"\r\nimport {Button} from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        title: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'block',\r\n            },\r\n        },\r\n        sectionDesktop: {\r\n            display: 'none',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'flex',\r\n            },\r\n        },\r\n        sectionMobile: {\r\n            display: 'flex',\r\n            [theme.breakpoints.up('md')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        typography__authorizedUserNickname: {\r\n            marginRight: theme.spacing(2),\r\n            alignSelf: 'center',\r\n        },\r\n    }),\r\n)\r\n\r\nconst AppBarContent: React.FC<MapStatePropsType & MapDispatchProps> = (props) => {\r\n\r\n\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null)\r\n\r\n    const isMenuOpen = Boolean(anchorEl)\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\r\n\r\n    const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null)\r\n    }\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null)\r\n        handleMobileMenuClose()\r\n    }\r\n\r\n    const handleExit = () => {\r\n        handleMenuClose()\r\n        props.logout()\r\n    }\r\n\r\n    const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n        setMobileMoreAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const countOfShownTasks = props.isAuth ? props.countOfShownTasks : 0\r\n\r\n    const menuId = 'primary-search-account-menu'\r\n    const renderMenu = (\r\n        <MenuMui\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItemMui onClick={handleExit}>Выйти</MenuItemMui>\r\n        </MenuMui>\r\n    )\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <MenuMui\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            {\r\n                !props.isAuth ? <MenuItemMui onClick={() => {}}>Войти</MenuItemMui>\r\n                    : <MenuItemMui onClick={handleProfileMenuOpen}>\r\n                        <IconButtonMui\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"primary-search-account-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircleIconMui/>\r\n                        </IconButtonMui>\r\n                        <p>{props.myNickname}</p>\r\n                    </MenuItemMui>\r\n            }\r\n        </MenuMui>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <TypographyMui className={classes.title} variant=\"h6\" noWrap>\r\n                {`Менеджер задач (${countOfShownTasks})`}\r\n                <Helmet title={`(${countOfShownTasks}) Менеджер задач`}/>\r\n            </TypographyMui>\r\n            <div className={classes.grow}/>\r\n            {\r\n                !props.isAuth ? <div className={classes.sectionDesktop}>\r\n                        <Button color=\"inherit\">Войти</Button>\r\n                    </div>\r\n                    : <div className={classes.sectionDesktop}>\r\n\r\n                        <TypographyMui className={classes.typography__authorizedUserNickname}\r\n                                       variant='body1'>{props.myNickname}</TypographyMui>\r\n                        <IconButtonMui\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircleIconMui/>\r\n                        </IconButtonMui>\r\n                    </div>\r\n            }\r\n            <div className={classes.sectionMobile}>\r\n                <IconButtonMui\r\n                    aria-label=\"show more\"\r\n                    aria-controls={mobileMenuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMobileMenuOpen}\r\n                    color=\"inherit\"\r\n                >\r\n                    <MoreIconMui/>\r\n                </IconButtonMui>\r\n            </div>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        countOfShownTasks: state.tasks.countOfShownTasks,\r\n        myNickname: state.auth.nickname,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype MapDispatchProps = {\r\n    logout: () => void\r\n}\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppBarContent)","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport MenuItemMui from '@material-ui/core/MenuItem'\r\nimport FormControlMui from '@material-ui/core/FormControl'\r\nimport SelectMui from '@material-ui/core/Select'\r\nimport InputAdornmentMui from '@material-ui/core/InputAdornment'\r\nimport FilterListIconMui from '@material-ui/icons/FilterList'\r\nimport {Divider} from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }),\r\n)\r\n\r\nconst CombinedFilter: React.FC<any> = () => {\r\n\r\n    const classes = useStyles()\r\n    const [age, setAge] = React.useState('')\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setAge(event.target.value as string)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormControlMui className={classes.formControl}>\r\n                <SelectMui\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                    startAdornment={\r\n                        <InputAdornmentMui position='start'>\r\n                            <FilterListIconMui />\r\n                        </InputAdornmentMui>\r\n                    }\r\n                >\r\n                    <MenuItemMui value=''>\r\n                        <em>Сортировка</em>\r\n                    </MenuItemMui>\r\n                    <Divider />\r\n                    <MenuItemMui value='NEW_FIRST'>От новых к старым</MenuItemMui>\r\n                    <MenuItemMui value='OLD_FIRST'>От старых к новым</MenuItemMui>\r\n                    <Divider />\r\n                    <MenuItemMui value='OPEN_FIRST'>Сначала незавершенные</MenuItemMui>\r\n                    <MenuItemMui value='CLOSE_FIRST'>Сначала завершенные</MenuItemMui>\r\n                </SelectMui>\r\n            </FormControlMui>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CombinedFilter","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport MenuItemMui from '@material-ui/core/MenuItem'\r\nimport FormControlMui from '@material-ui/core/FormControl'\r\nimport SelectMui from '@material-ui/core/Select'\r\nimport InputAdornmentMui from '@material-ui/core/InputAdornment'\r\nimport SortIconMui from '@material-ui/icons/Sort'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }),\r\n)\r\n\r\nconst ByStatusSort: React.FC<any> = () => {\r\n\r\n    const classes = useStyles()\r\n    const [age, setAge] = React.useState('')\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setAge(event.target.value as string)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <FormControlMui className={classes.formControl}>\r\n                <SelectMui\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                    displayEmpty\r\n                    className={classes.selectEmpty}\r\n                    inputProps={{ 'aria-label': 'Without label' }}\r\n                    startAdornment={\r\n                        <InputAdornmentMui position=\"start\">\r\n                            <SortIconMui />\r\n                        </InputAdornmentMui>\r\n                    }\r\n                >\r\n                    <MenuItemMui value=\"\">\r\n                        <em>По статусу</em>\r\n                    </MenuItemMui>\r\n                    <MenuItemMui value='OPEN'>Незавершенные</MenuItemMui>\r\n                    <MenuItemMui value='CLOSE'>Завершенные</MenuItemMui>\r\n                </SelectMui>\r\n            </FormControlMui>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ByStatusSort","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport AutocompleteMui from '@material-ui/lab/Autocomplete'\r\nimport TextFieldMui from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n            '& > * + *': {\r\n                marginTop: theme.spacing(3),\r\n            },\r\n        },\r\n    }),\r\n)\r\n\r\nconst ByUsersFilter: React.FC<any> = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AutocompleteMui\r\n                disableClearable\r\n                multiple\r\n                id=\"tags-outlined\"\r\n                options={users}\r\n                getOptionLabel={(option) => option.nickname}\r\n                defaultValue={[users[0]]}\r\n                filterSelectedOptions\r\n                renderInput={(params) => (\r\n                    <TextFieldMui\r\n                        {...params}\r\n                        variant=\"standard\"\r\n                        label=\"\"\r\n                        placeholder=\"Авторы\"\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst users = [\r\n    {\r\n        \"id\": 0,\r\n        \"nickname\": \"test-user\"\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"nickname\": \"mom\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"nickname\": \"dad\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"nickname\": \"wife\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"nickname\": \"son\"\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"nickname\": \"daughter\"\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"nickname\": \"colleague-1\"\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"nickname\": \"colleague-2\"\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"nickname\": \"boss\"\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"nickname\": \"teacher\"\r\n    }\r\n]\r\n\r\nexport default ByUsersFilter\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport TextFieldMui from '@material-ui/core/TextField'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1, 0),\r\n            },\r\n        },\r\n    }),\r\n)\r\n\r\nconst ByContentFilter: React.FC<any> = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form style={{width: '100%'}} className={classes.root} noValidate autoComplete=\"off\"\r\n        >\r\n            <TextFieldMui id=\"standard-basic\" label=\"Искать по содержимому: \" fullWidth/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ByContentFilter","import React from 'react'\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles'\r\nimport ListMui from '@material-ui/core/List'\r\nimport ListItemMui from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryActionMui from '@material-ui/core/ListItemSecondaryAction'\r\nimport IconButtonMui from '@material-ui/core/IconButton'\r\nimport BackspaceIconMui from '@material-ui/icons/Backspace'\r\nimport CombinedFilter from \"./CombinedFilter/CombinedFilter\"\r\nimport ByStatusSort from \"./ByStatusSort/ByStatusSort\"\r\nimport ByUsersFilter from \"./ByUsersFilter/ByUsersFilter\"\r\nimport ByContentFilter from \"./ByContentFilter/ByContentFilter\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n    }),\r\n);\r\n\r\nconst Filter: React.FC<any> = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    type OwnProps = {\r\n        children: React.ReactElement | React.ReactElement[]\r\n    }\r\n    const FilterRow: React.FC<OwnProps> = (props) => {\r\n        return (\r\n            <ListItemMui >\r\n                {props.children}\r\n                <ListItemSecondaryActionMui>\r\n                    <IconButtonMui edge=\"end\" aria-label=\"delete\">\r\n                        <BackspaceIconMui/>\r\n                    </IconButtonMui>\r\n                </ListItemSecondaryActionMui>\r\n            </ListItemMui>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ListMui disablePadding>\r\n                <FilterRow>\r\n                        <CombinedFilter/>\r\n                        <ByStatusSort/>\r\n                </FilterRow>\r\n                <FilterRow><ByUsersFilter/></FilterRow>\r\n                <FilterRow><ByContentFilter/></FilterRow>\r\n            </ListMui>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles'\r\nimport ListMui from '@material-ui/core/List'\r\nimport ListItemMui from '@material-ui/core/ListItem'\r\nimport ListItemIconMui from '@material-ui/core/ListItemIcon'\r\nimport ListItemTextMui from '@material-ui/core/ListItemText'\r\nimport CollapseMui from '@material-ui/core/Collapse'\r\nimport ExpandLessMui from '@material-ui/icons/ExpandLess'\r\nimport ExpandMoreMui from '@material-ui/icons/ExpandMore'\r\nimport SearchIconMui from '@material-ui/icons/Search'\r\nimport Filter from \"./Filter\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        /*nested: {\r\n            paddingLeft: theme.spacing(4),\r\n        },*/\r\n    }),\r\n)\r\n\r\nconst FilterWrapper: React.FC<any> = () => {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListItemMui button onClick={handleClick}>\r\n                <ListItemIconMui>\r\n                    <SearchIconMui/>\r\n                </ListItemIconMui>\r\n                <ListItemTextMui\r\n                    primary=\"Поиск задач\"\r\n                    primaryTypographyProps={{variant: \"body1\"}}/>\r\n                {open ? <ExpandLessMui/> : <ExpandMoreMui/>}\r\n            </ListItemMui>\r\n            <CollapseMui in={open} timeout=\"auto\" unmountOnExit>\r\n                <ListMui component=\"div\" disablePadding>\r\n                    <Filter/>\r\n                </ListMui>\r\n            </CollapseMui>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilterWrapper","import React, {useEffect, useMemo} from 'react'\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles'\r\nimport ListMui from '@material-ui/core/List'\r\nimport ListItemMui from '@material-ui/core/ListItem'\r\nimport ListItemIconMui from '@material-ui/core/ListItemIcon'\r\nimport ListItemSecondaryActionMui from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemTextMui from '@material-ui/core/ListItemText'\r\nimport CheckboxMui from '@material-ui/core/Checkbox'\r\nimport IconButtonMui from '@material-ui/core/IconButton'\r\nimport ContainerMui from \"@material-ui/core/Container\"\r\nimport DeleteOutlineIconMui from '@material-ui/icons/DeleteOutline'\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\"\r\nimport CollapseMui from \"@material-ui/core/Collapse/Collapse\"\r\nimport {AppStateType} from \"../../redux/store\"\r\nimport {connect} from \"react-redux\"\r\nimport {getTasks, setCountOfShownTasks, setFetching} from \"../../redux/tasksReducer\"\r\nimport {TaskFilterType, TaskType, UserType} from \"../../types/types\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            maxWidth: 600,\r\n            backgroundColor: theme.palette.background.paper,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n        },\r\n        progress: {\r\n            alignSelf: 'center',\r\n            margin: theme.spacing(2),\r\n        },\r\n    }),\r\n)\r\n\r\nconst TasksList: React.FC<MapStatePropsType & MapDispatchProps> = (props) => {\r\n\r\n    /*********************************************\r\n     * Отладочный блок\r\n     * *******************************************/\r\n    console.log(`Component \"TasksList\" was drawed`)\r\n\r\n    useEffect(()=>{console.log(`isFetching =        ${props.isFetching}`)},[props.isFetching])\r\n    useEffect(()=>{console.log(`isAuth] =           ${props.isAuth}`)},[props.isAuth])\r\n    useEffect(()=>{console.log(`usersIsFetching =   ${props.usersIsFetching}`)},[props.usersIsFetching])\r\n    useEffect(()=>{console.log(`selectedUserId =    ${props.selectedUserId}`)},[props.selectedUserId])\r\n    useEffect(()=>{console.log(`selectedProjectId = ${props.selectedProjectId}`)},[props.selectedProjectId])\r\n    useEffect(()=>{console.log(`tasks =             ${props.tasks}`)},[props.tasks])\r\n    useEffect(()=>{console.log(`users =             ${props.users}`)},[props.users])\r\n    useEffect(()=>{console.log(`myId =              ${props.myId}`)},[props.myId])\r\n    useEffect(()=>{console.log(`filter =            ${props.filter}`)},[props.filter])\r\n\r\n    /*********************************************\r\n     * Конец отладочного блока\r\n     * *******************************************/\r\n\r\n\r\n    useEffect(() => {\r\n        props.usersIsFetching && props.setFetching(true)\r\n    }, [props.usersIsFetching])\r\n\r\n    useEffect(() => {\r\n\r\n        props.selectedProjectId !== null && props.getTasks([props.selectedProjectId], null)\r\n    }, [props.selectedProjectId])\r\n\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = React.useState([0]);\r\n\r\n    const handleToggle = (value: number) => () => {\r\n        const currentIndex = checked.indexOf(value)\r\n        const newChecked = [...checked]\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n\r\n        setChecked(newChecked)\r\n    };\r\n\r\n    const userNickNameByUserId = (users: Array<UserType>, item: TaskType) => {\r\n        let userNicknams = props.users.filter((u) => u.id === item.author)\r\n        return userNicknams.length > 0 && userNicknams[0].nickname\r\n    }\r\n\r\n    const filteredTasks = useMemo(() => {\r\n        return props.tasks.filter((t) => {\r\n                let statusFilter = props.filter.status !== null ? t.isDone === props.filter.status : true\r\n                let usersFilter = props.filter.userIds.length > 0 ? props.filter.userIds.filter(id => id === t.author).length > 0 : true\r\n                let contentFilter = t.title.match(new RegExp(props.filter.content, 'g'))\r\n                return statusFilter && usersFilter && contentFilter\r\n            })\r\n    }, [props.filter, props.tasks])\r\n\r\n    const countOfShownTasks = useMemo(()=>{\r\n        props.setCountOfShownTasks(filteredTasks.length)\r\n    },[filteredTasks])\r\n\r\n    return (\r\n        <ContainerMui maxWidth={\"sm\"}>\r\n            <ListMui className={classes.root}>\r\n                {props.isFetching && props.isAuth\r\n                    ? <CircularProgress className={classes.progress} size={50}/>\r\n                    : props.isAuth && filteredTasks.map((item) => {\r\n                    const labelId = `checkbox-list-label-${item.id}`;\r\n                    return (\r\n                        <ListItemMui key={item.id} role={undefined} button onClick={handleToggle(item.id)}>\r\n                            <ListItemIconMui>\r\n                                <CheckboxMui\r\n                                    edge=\"start\"\r\n                                    checked={item.isDone}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{'aria-labelledby': labelId}}\r\n                                />\r\n                            </ListItemIconMui>\r\n                            <ListItemTextMui id={labelId}\r\n                                             primary={item.title}\r\n                                             secondary={\r\n                                                 userNickNameByUserId(props.users, item)\r\n                                             }\r\n                            />\r\n                            {item.author === props.myId && (\r\n                                <ListItemSecondaryActionMui>\r\n                                    <IconButtonMui edge=\"end\" aria-label=\"comments\">\r\n                                        <DeleteOutlineIconMui/>\r\n                                    </IconButtonMui>\r\n                                </ListItemSecondaryActionMui>\r\n                            )}\r\n                        </ListItemMui>\r\n                    );\r\n                })}\r\n            </ListMui>\r\n        </ContainerMui>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isFetching: state.tasks.isFetching,\r\n        isAuth: state.auth.isAuth,\r\n        usersIsFetching: state.users.isFetching,\r\n        selectedUserId: state.users.selectedUserId,\r\n        selectedProjectId: state.projects.selectedProjectId,\r\n        tasks: state.tasks.tasks,\r\n        users: state.users.users,\r\n        myId: state.auth.id,\r\n        filter: state.tasks.filter\r\n    }\r\n}\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype MapDispatchProps = {\r\n    setFetching: (isFetching: boolean) => void,\r\n    getTasks: (projectIds: Array<number> | null, userIds: Array<number> | null) => void\r\n    setCountOfShownTasks: (countOfShownTasks: number) => void\r\n}\r\nconst mapDispatchToProps = {\r\n    setFetching,\r\n    getTasks,\r\n    setCountOfShownTasks\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksList)","import './App.css'\r\nimport React, {useCallback, useEffect} from 'react'\r\nimport * as Api from '../src/api/api'\r\nimport store, {AppStateType} from \"./redux/store\"\r\nimport {getCounter} from \"./utils/universalCounter\"\r\nimport {login, logout} from './redux/authReducer'\r\nimport {getProjects} from \"./redux/projectsReducer\"\r\nimport {getUsers} from \"./redux/usersReducer\"\r\nimport {getTasks} from \"./redux/tasksReducer\"\r\nimport {makeStyles, useTheme, Theme, createStyles} from '@material-ui/core/styles'\r\nimport AppBarMui from '@material-ui/core/AppBar'\r\nimport CssBaselineMui from '@material-ui/core/CssBaseline'\r\nimport DividerMui from '@material-ui/core/Divider'\r\nimport DrawerMui from '@material-ui/core/Drawer'\r\nimport HiddenMui from '@material-ui/core/Hidden'\r\nimport IconButtonMui from '@material-ui/core/IconButton'\r\nimport ToolbarMui from '@material-ui/core/Toolbar'\r\nimport MenuIconMui from '@material-ui/icons/Menu'\r\nimport Menu from \"./components/Menu/Menu\"\r\nimport AppBarContent from \"./components/AppBarContent/AppBarContent\"\r\nimport FilterWrapper from \"./components/FilterData/FilterWrapper\"\r\nimport TasksList from \"./components/TasksList/TasksList\"\r\nimport {connect} from \"react-redux\"\r\nimport {CircularProgress} from \"@material-ui/core\"\r\nimport Backdrop from \"@material-ui/core/Backdrop\"\r\nimport {appInitializing} from \"./redux/appReducer\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        drawer: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        appBar: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n                marginLeft: drawerWidth,\r\n            },\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n        backdrop: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: '#fff',\r\n        },\r\n    }),\r\n);\r\n\r\nconst App: React.FC<MapStatePropsType & MapDispatchProps> = (props) => {\r\n\r\n    /*********************************************\r\n     * Отладочный блок\r\n     * *******************************************/\r\n    console.log(`Component \"App\" was drawed`)\r\n    /*********************************************\r\n     * Конец отладочного блока\r\n     * *******************************************/\r\n\r\n    useEffect( () => {\r\n        props.appInitializing()\r\n    },[])\r\n\r\n// @ts-ignore\r\n    window.api = Api\r\n// @ts-ignore\r\n    window.counter = getCounter\r\n// @ts-ignore\r\n    window.dispatch = store.dispatch\r\n// @ts-ignore\r\n    window.thunk = {}\r\n// @ts-ignore\r\n    window.thunk.login = login\r\n// @ts-ignore\r\n    window.thunk.logout = logout\r\n// @ts-ignore\r\n    window.thunk.getProjects = getProjects\r\n// @ts-ignore\r\n    window.thunk.getUsers = getUsers\r\n// @ts-ignore\r\n    window.thunk.getTasks = getTasks\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false)\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar}/>\r\n            <DividerMui/>\r\n            <Menu/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Backdrop className={classes.backdrop} open={!props.isInitialized}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <CssBaselineMui/>\r\n            <AppBarMui position=\"fixed\" className={classes.appBar}>\r\n                <ToolbarMui>\r\n                    <IconButtonMui\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIconMui/>\r\n                    </IconButtonMui>\r\n                    <AppBarContent/>\r\n                </ToolbarMui>\r\n            </AppBarMui>\r\n            <nav className={classes.drawer} aria-label=\"menu folders\">\r\n                <HiddenMui smUp implementation=\"css\">\r\n                    <DrawerMui\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true,\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </DrawerMui>\r\n                </HiddenMui>\r\n                <HiddenMui xsDown implementation=\"css\">\r\n                    <DrawerMui\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </DrawerMui>\r\n                </HiddenMui>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                <FilterWrapper/>\r\n                <TasksList/>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized\r\n    }\r\n}\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype MapDispatchProps = {\r\n    appInitializing: () => void\r\n}\r\nconst mapDispatchToProps = {\r\n    appInitializing\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\"\r\nimport store from \"./redux/store\"\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}